// 
//  Archiver - Cross platform, multi-destination backup and archiving utility
//  
//  Copyright (c) 2020-2021 Steve Cross <flip@foxhollow.cc>
// 
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 2 of the License, or
//  (at your option) any later version.
//   
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//   
//  You should have received a copy of the GNU General Public License along
//  with this program; if not, write to the Free Software Foundation, Inc.,
//  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//
 {
    "Disc": {
        "CapacityLimit": 24928845824,
        "DVDCapacityLimit": 4566155264,
        "SourcePaths": [
            "//server/Remote/Path"
        ],
        "ExcludePaths": [
            "//server/Remote/Path/BadFiles"
        ],
        "ExcludeFiles": [
            "Thumbs.db",
            "Folder.jpg",
            ".DS_Store",
            ".nomedia",
            ".ini",
            ".json",
            ".411",
            ".thm",
            ".html",
            ".htm",
            ".bridgesort",
            ".lnk",
            ".cgi",
            ".dsssettings"
        ],
        "StagingDir": "D:/archive"
    },
    "Tape": {
        // Driver to use to access the tape drive. Options: 
        //   - auto   [Automatically detects a local tape drive, if present. If not, scans the network for a remote tape server
        //   - native [Uses the tape drive physically attached to the local system. Currently only works on windows]
        //   - remote [USes a tape drive attached to a remote system that has been build as a tape server]
        "Driver": "auto",

        // Tape drive to use with the system. Options
        //   - auto         [Automatically detect a local tape drive or remote tape server]
        //   - \\\\.\\Tape0 [Use the first tape drive attached to the local Windows system]
        //   - /dev/mt0     [Use the tape drive named mt0 on the local Linux system]
        //   - ip|hostname  [Connect to the remote tape server specified by IP address or hostname]
        "Drive": "auto",
        // "Drive": "\\\\.\\Tape0",

        // Automatically eject tape after writing
        //
        "AutoEject": false,

        // Tape block size for the text records at the beginning of the tape
        //
        // 64KB is a pretty standard value to use here
        //
        "TextBlockSize": 65536,

        // the blocking factor to use when creating the tar
        //
        // the tar block is 512 (cannot be changed), so the below number is multiplied
        // by 512 to generate the final block size on tape.
        //
        // for example if 256 is specified below:
        //     512 * 256 = 128KB blocks
        //
        "BlockingFactor": 512, // 256KB tape block size

        // the number of blocks to store in memory as a write buffer
        // 
        // this app creates the tar and stores it in memory, and then writes the tape from
        // memory. this is done to help ensure that the tape will not constantly stop and 
        // rewind if the source data is coming in slower than the tape can write it.
        //
        // this number is multiplied by the final block size calculated from above
        //
        // for example, if 256 is specified for "BlockingFactor" above and 8192 is specified
        // here:
        //    512 * 256 = 128KB blocks
        //    128KB * 8192 = 1GB memory buffer
        //
        "MemoryBufferBlockCount": 16384, // 256KB * 16384 = 4 gb buffer

        // Required buffer fill to start writing
        //
        // Percentage of buffer blocks that must be full before writing will start.
        // ideally this should be >= 95%
        //
        "MemoryBufferMinFill": 98
    },
    "CdbxpPath": "C:/bin/cdbxp/cdbxpcmd.exe",
    "DdPath": "c:/cygwin64/bin/dd.exe"
}